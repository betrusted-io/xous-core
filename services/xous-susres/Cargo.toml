[package]
name = "xous-susres"
version = "0.1.36"
authors = ["bunnie <bunnie@kosagi.com>"]
edition = "2018"
description = "Manager of suspend/resume operations implementation"
license = "MIT OR Apache-2.0"
repository = "https://github.com/betrusted-io/xous-core/"
homepage = "https://betrusted.io/xous-book/"

# Dependency versions enforced by Cargo.lock.
[dependencies]
xous-api-susres = "0.9.66"
xous-names = { package = "xous-api-names", version = "0.9.68" }
log-server = { package = "xous-api-log", version = "0.1.66" }
xous = "0.9.67"
xous-ipc = "0.10.7"
log = "0.4.14"
precursor-hal = { path = "../../libs/precursor-hal" }

num-derive = { version = "0.4.2", default-features = false }
num-traits = { version = "0.2.14", default-features = false }
rkyv = { version = "0.8.8", default-features = false, features = [
    "std",
    "alloc",
] }


utralib = { version = "0.1.26", optional = true, default-features = false }

[target.'cfg(target_arch = "riscv32")'.dependencies]
loader = { path = "../../loader", default-features = false }

[target.'cfg(target_arch = "arm")'.dependencies]
loader = { path = "../../loader", default-features = false }

[features]
precursor = ["utralib/precursor"]
hosted = ["utralib/hosted"]
renode = ["utralib/renode"]
swap = ["loader/swap", "loader/resume"]
sus_reboot = [
] # when selected, suspend triggers an immediate reboot instead of suspend. For testing only.
debugprint = []
default = []
