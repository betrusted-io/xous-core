[package]
name = "cramium-hal"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
xous-api-names = { version = "0.9.65", optional = true }
xous-api-ticktimer = { version = "0.9.63", optional = true }
log = { version = "0.4.14", optional = true }
utralib = { version = "0.1.25", default-features = false, features = [
    "cramium-soc",
] }
bitflags = "1.2.1"
rkyv = { version = "0.8.8", default-features = false, features = [
    "std",
    "alloc",
], optional = true }
num-derive = { version = "0.4.2", default-features = false }
num-traits = { version = "0.2.14", default-features = false }
riscv = { version = "0.5.6", package = "xous-riscv" }
usb-device = { version = "0.2.8", features = ["log"], optional = true }
bitfield = "0.13.2"
either = { version = "1.9.0", default-features = false }
ux-api = { path = "../ux-api", default-features = false }

# [target.'cfg(target_os = "xous")'.dependencies]
xous = { version = "0.9.64", features = ["v2p"] }

[features]
camera-ov2640 = []
display-sh1107 = []
axp2101 = []
board-baosec = [
    "camera-ov2640",
    "display-sh1107",
    "axp2101",
    "ux-api/board-baosec",
] # USB form factor token
hosted-baosec = [] # emulated hardware on x86 platform
board-baosor = ["camera-ov2640", "axp2101"] # Precursor form factor
board-dabao = [] # Dev board form factor
verilator-only = []
mpw = []
hdl-test = []
verbose-debug = []
debug-print-usb = []

udma-stress-test = [
] # For RTL simulation testing - aggravates a key corner case

compress-entropy = []
magic-manual = []
std = [
    "log",
    "xous-api-names",
    "usb-device",
    "xous-api-ticktimer",
    "ux-api/std",
]
derive-rkyv = ["rkyv"]
default = []
